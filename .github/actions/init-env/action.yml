name: InitEnv
description: init repository structure to run test and ci.
inputs:
    ref:
        description: 'The branch, tag or SHA to checkout'
        default: 'main'
        required: true
    version:
        description: 'The version to require'
        default: 'dev-main'
        required: true
    gally-directory:
        description: 'Base gally directory'
        default: ''
        required: true
    package-name:
        description: 'Package name'
        default: ''
        required: true
runs:
    using: "composite"
    steps:
         - name: Setup PHP
           uses: shivammathur/setup-php@v2
           with:
               php-version: 8.3
                
         # Checkout gally "template" from the same branch. This is the dev environment with docker files.
         - name: Checkout Gally template
           uses: actions/checkout@v3
           with:
               repository: 'Elastic-Suite/gally'
               ref: ${{ inputs.ref }}
               path: ${{ inputs.gally-directory }}

         - name: Checkout Gally admin
           uses: actions/checkout@v3
           with:
               repository: 'Elastic-Suite/gally-admin'
               ref: ${{ inputs.ref }}
               path: ${{ inputs.gally-directory }}/front/gally-admin
         
         # Checkout current package
         # in $GITHUB_WORKSPACE we will have this after this step :
         # - gally : a full development environment which is needed for PHPStan
         # - gally/api/packages/<package-name> : contains only the sources from current branch or PR.
         - name: Checkout PHP package (The branch to merge)
           uses: actions/checkout@v3
           with:
               path: ${{ format('{0}/api/packages/{1}', inputs.gally-directory, inputs.package-name) }}
               ref: ${{ github.event.pull_request.head.sha }}
         
         # Get composer cache
         - name: Cache Composer dependencies
           uses: actions/cache@v4
           with:
               path: /tmp/composer-cache
               key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
         
         # Add current package as path composer package.
         - name: Prepare local Repository
           working-directory: ${{ inputs.gally-directory }}
           shell: bash
           run: |
               composer config --global --no-interaction --ansi repositories.${{ inputs.package-name }} '{ "type": "path", "url": "packages/${{ github.event.repository.name }}", "options": { "versions": { "gally/${{ inputs.package-name }}": "${{ inputs.version }}"}}}'
               composer config --global repositories
         
         # Require current package.
         - name: Add package from current branch or PR (local contrib)
           working-directory: ${{ inputs.gally-directory }}
           shell: bash
           run: |
               COMPOSER_MIRROR_PATH_REPOS=1 composer require gally/${{ inputs.package-name }}:${{ inputs.version }} --working-dir=api
